import { IWalletKit, WalletKitTypes } from "./types";
export declare class WalletKit extends IWalletKit {
    name: IWalletKit["name"];
    core: IWalletKit["core"];
    logger: IWalletKit["logger"];
    events: IWalletKit["events"];
    engine: IWalletKit["engine"];
    metadata: IWalletKit["metadata"];
    static notifications: WalletKitTypes.INotifications;
    signConfig: IWalletKit["signConfig"];
    static init(opts: WalletKitTypes.Options): Promise<WalletKit>;
    constructor(opts: WalletKitTypes.Options);
    on: IWalletKit["on"];
    once: IWalletKit["once"];
    off: IWalletKit["off"];
    removeListener: IWalletKit["removeListener"];
    pair: IWalletKit["pair"];
    approveSession: IWalletKit["approveSession"];
    rejectSession: IWalletKit["rejectSession"];
    updateSession: IWalletKit["updateSession"];
    extendSession: IWalletKit["extendSession"];
    respondSessionRequest: IWalletKit["respondSessionRequest"];
    disconnectSession: IWalletKit["disconnectSession"];
    emitSessionEvent: IWalletKit["emitSessionEvent"];
    getActiveSessions: IWalletKit["getActiveSessions"];
    getPendingSessionProposals: IWalletKit["getPendingSessionProposals"];
    getPendingSessionRequests: IWalletKit["getPendingSessionRequests"];
    registerDeviceToken: IWalletKit["registerDeviceToken"];
    approveSessionAuthenticate: IWalletKit["approveSessionAuthenticate"];
    rejectSessionAuthenticate: IWalletKit["rejectSessionAuthenticate"];
    formatAuthMessage: IWalletKit["formatAuthMessage"];
    private initialize;
}
//# sourceMappingURL=client.d.ts.map